Q1: Как настроить на Linux машине простейший шлюз в интернет из локальной сети?

Для настройки простейшего шлюза в интернет на Linux машине из локальной сети, будем использовать IP Forwarding и iptables с NAT-маскарадом.

1. Включим IP forwarding для перенаправления трафика между сетевыми интерфейсами:
# vi /etc/sysctl.conf
    net.ipv4.ip_forward = 1
# sysctl -p

2. Настроим iptables, чтобы пропускать все пакеты из локальной сети в интернет и задействовать NAT MASQUERADE. 
Пусть локальная сеть подключена к eth0, а интернет-соединение на интерфейсе eth1.
# iptables -A FORWARD -i eth0 -o eth1 -j ACCEPT
# iptables -t nat -A POSTROUTING -o eth1 -j MASQUERADE

Для сохранения правил после перезагрузки, используем iptables-persistent.
# service iptables-persistent save

3. На других хостах в локальной сети надо установить эту машину (GW) шлюзом по-умолчанию:
# ip r add default via <IP_GW>


---


Q2: Напишите простейший watchdog для нестабильной программы my_program, которая управляется systemd скриптом.

В самом юните systemd есть возможность настроить перезапуск службы при падении (Restart=on-failure).
Если очень нужен внешний watchdog:

1. Создадим скрипт watchdog.sh с проверкой запущено ли приложение 1 раз в минуту
# vi watchdog.sh

#! /bin/bash
while true; do
    if ! (pgrep -x "my_program") > /dev/null; then
        systemctl restart my_program.service
    fi
    sleep 60
done


2. Дадим ему права на исполнение
# chmod +x watchdog.sh
и можно сразу запускать ./watchdog.sh в терминале


3. Или создать отдельный systemd скрипт для запуска скрипта, перезапускающего приложение my_program при падении
# vi /etc/systemd/system/my_program_watchdog.service

[Unit]
Description=Watchdog for my_program application
After=network.target

[Service]
ExecStart=/path/to/watchdog.sh
User=root
Group=root
Restart=always

[Install]
WantedBy=multi-user.target


# systemctl daemon-reload
# systemctl enable my_program_watchdog.service
# systemctl start my_program_watchdog.service


---


Q3: Расскажите подробно, как вы будете решать проблему с ошибкой 404 в веб-приложении, которое вы обслуживаете.

1. Посмотрю еще раз на веб-приложение: действительно ли еще есть ошибка, попробую другой браузер и ОС
2. Проверю логи системы мониторинга, запомню точное время появления проблемы, какие при этом были нагрузки CPU/RAM/IO/Net, какие были аномалии в доступных метриках
3. Проверю на сервере логи приложения, логи веб-сервера и системные логи
4. В конфиге веб-вервера проверю не менялись ли настройки, корректна ли конфигурация (nginx -t, как например)
5. В конфиге веб-вервера проверю куда указывает URL приложения, схожу туда (в файловой системе), чтобы убедиться, что файлы на месте и есть необходимые права на чтение
6. Попутно проверю есть ли свободное место на диске
7. Если веб-приложение на базе CMS, проверю его настройки, плагины, модули и т.п. на корректность
8. Если недавно был деплой/релиз/правки, узнаю у разработчиков какие были последние изменения в коде, подключу их к решению проблемы
9. Как вариант последней надежды - пробный перезапуск веб-приложения
10. При отсутствии прогресса - эскалирование проблемы
